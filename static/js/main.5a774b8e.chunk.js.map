{"version":3,"sources":["state/reducer.ts","reportWebVitals.ts","connectors/index.ts","state/state.tsx","utils/fetchers.ts","utils/listTokensFrom.ts","utils/toShort.ts","utils/index.ts","components/Token/Token.tsx","components/Header/Header.tsx","actions/updateUser.ts","actions/getContract.ts","actions/updateTokensOnSale.ts","components/Profile/Profile.tsx","components/Gallery/Gallery.tsx","components/UserMenu/UserMenu.tsx","components/PrivateRoute/PrivateRoute.tsx","components/Identicon/Identicon.tsx","components/TransactionProgress/TransactionProgress.tsx","layout/App.tsx","layout/Root.tsx","layout/Profile.tsx","layout/Connect.tsx","hooks/web3.ts","theme/index.ts","index.tsx"],"names":["ActionType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ConnectorNames","reducer","state","action","type","ETH_PRICE","ethPrice","payload","SET_CONNECTOR","activatingConnector","UPDATE_USER","isAuthenticated","user","SIGN_OUT","undefined","LOAD_TOKEN_SALE","tokensOnSale","CONTRACT","contract","SET_TRANSACTION","transaction","Error","defaultState","myContext","createContext","dispatch","useStateContext","useContext","StateProvider","children","useReducer","Provider","value","fetcherETHUSD","url","fetch","r","json","result","ethusd","fetcherMetadata","a","error","message","listTokensFrom","address","Promise","resolve","reject","ownedTokensEvents","filters","Transfer","queryFilter","results","ownedTokens","Map","all","map","current","ownerOf","args","tokenId","tokenMeta","id","name","price","tokenURI","uri","set","Array","from","toShort","factor","slice","Math","round","length","substr","REACT_APP_SERVICE_URL","process","ETHSCAN_API","Token","token","isOnSale","onTransfer","onBuy","onSale","useState","transfer","setTransfer","onSaleActive","setOnSale","setAddress","setPrice","owner","setOwner","onTransferClick","e","preventDefault","utils","isAddress","onSaleClick","parseEther","useEffect","console","loadOwner","data","useSWR","tokenPriceEth","Intl","NumberFormat","style","currency","format","Number","formatEther","variant","sx","width","bg","borderBottom","src","image","p","pt","as","color","fontSize","fontWeight","m","constants","EtherSymbol","toFixed","mt","target","href","textOverflow","position","overflow","details","justifyContent","onSubmit","flexDirection","onChange","currentTarget","placeholder","onClick","ml","opacity","find","formatUnits","pointerEvents","Header","history","useHistory","location","useLocation","alignItems","push","cursor","display","py","pathname","updateUser","userAccount","library","getBalance","balance","log","getContract","chainId","networkid","deployedNetwork","NFTT","networks","String","Contract","abi","getSigner","symbol","updateTokensOnSale","getAllOnSale","tokensForSale","reduce","acc","b","Profile","useWeb3React","onConfirmTransfer","onTransferToken","tx","wait","confirmations","onSaleToken","setTokenSale","columns","gap","my","t","index","Gallery","order","setOrder","onBuyToken","purchaseToken","loadTokensForSale","useCallback","onBuyTokenClick","mb","mr","disabled","sort","BigNumber","toString","localeCompare","numeric","sub","i","UserMenu","justifySelf","textAlign","height","borderRadius","size","PrivateRoute","Component","component","path","render","props","to","Identicon","ref","useRef","innerHTML","appendChild","jazzicon","parseInt","TransactionProgress","receipt","loadTransaction","hash","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","qrcode","pollingInterval","infuraId","REACT_APP_INFURA_ID","rpc","connectorsByName","Metamask","WalletConnect","iconsMap","App","connector","activate","active","Object","keys","currentConnector","activating","connected","borderColor","maxWidth","getLibrary","provider","Web3Provider","Root","basename","exact","ProfilePage","getErrorMessage","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","Connect","account","update","suppress","ethereum","window","autoRefreshOnNetworkChange","useInactiveListener","tried","setTried","isAuthorized","catch","useEagerConnect","breakpoints","space","fontSizes","fonts","body","heading","layout","container","px","pb","sizes","header","button","logo","sidemenu","chart","cards","nft","border","top","right","links","nav","transition","openSea","content","buttons","primary","fontFamily","lineHeight","paddingX","paddingY","outline","whiteSpace","minWidth","secondary","tertiary","quartiary","filter","connect","fontWeights","bold","lineHeights","subheading","colors","text","white","background","gray","lightGray","midGray","lightBlue","navy","green","amber","lightGreen","red","muted","transparent","white20","black66","divider","forms","input","paragraph","letterSpacing","h1","h2","h3","h4","h5","styles","root","hr","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.5a774b8e.chunk.js","sourcesContent":["import { TokenProps } from '../components/Token'\r\nimport { ContractProps, UserProps } from '../types'\r\nimport { StateContext } from './state'\r\n\r\nexport enum ActionType {\r\n  UPDATE_USER = 'Update User',\r\n  SIGN_OUT = 'Sign out',\r\n  CONTRACT = 'Contract',\r\n  LOAD_TOKEN_SALE = 'Load tokens on Sale',\r\n  ETH_PRICE = 'Eth price',\r\n  SET_CONNECTOR = 'Set Connector',\r\n  SET_TRANSACTION = 'Set Transaction',\r\n}\r\n\r\nexport type Action =\r\n  | { type: ActionType.ETH_PRICE; payload: string }\r\n  | { type: ActionType.CONTRACT; payload: ContractProps }\r\n  | { type: ActionType.UPDATE_USER; payload: UserProps }\r\n  | { type: ActionType.SIGN_OUT; payload?: any }\r\n  | { type: ActionType.SET_CONNECTOR; payload?: any }\r\n  | { type: ActionType.SET_TRANSACTION; payload?: any }\r\n  | { type: ActionType.LOAD_TOKEN_SALE; payload?: TokenProps[] }\r\n\r\nexport const reducer = (state: StateContext, action: Action) => {\r\n  switch (action.type) {\r\n    case ActionType.ETH_PRICE:\r\n      return { ...state, ethPrice: action.payload }\r\n    case ActionType.SET_CONNECTOR:\r\n      return { ...state, activatingConnector: action.payload }\r\n    case ActionType.UPDATE_USER:\r\n      return { ...state, isAuthenticated: true, user: action.payload }\r\n    case ActionType.SIGN_OUT:\r\n      return { ...state, isAuthenticated: false, user: undefined }\r\n\r\n    case ActionType.LOAD_TOKEN_SALE:\r\n      return { ...state, tokensOnSale: action.payload }\r\n\r\n    case ActionType.CONTRACT:\r\n      return { ...state, contract: action.payload }\r\n\r\n    case ActionType.SET_TRANSACTION:\r\n      return { ...state, transaction: action.payload }\r\n\r\n    default:\r\n      throw new Error('Not among actions')\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\n// import { NetworkConnector } from '@web3-react/network-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\r\n// import { LedgerConnector } from '@web3-react/ledger-connector'\r\n// import { TrezorConnector } from '@web3-react/trezor-connector'\r\n// import { LatticeConnector } from '@web3-react/lattice-connector'\r\n// import { FrameConnector } from '@web3-react/frame-connector'\r\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\r\n// // import { FortmaticConnector } from '@web3-react/fortmatic-connector'\r\n// // import { MagicConnector } from '@web3-react/magic-connector'\r\n// // import { PortisConnector } from '@web3-react/portis-connector'\r\n// import { TorusConnector } from '@web3-react/torus-connector'\r\n\r\nexport enum ConnectorNames {\r\n  Metamask = 'Metamask',\r\n  WalletConnect = 'WalletConnect',\r\n}\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst RPC_URLS: { [chainId: number]: string } = {\r\n  1: process.env.REACT_APP_RPC_URL_1 as string,\r\n  4: process.env.REACT_APP_RPC_URL_4 as string,\r\n}\r\n\r\nexport const injected = new InjectedConnector({ supportedChainIds: [5777, 1337, 4] })\r\n\r\n// export const network = new NetworkConnector({\r\n//   urls: {\r\n//     1337: RPC_URLS[1],\r\n//     4: RPC_URLS[4],\r\n//   },\r\n//   defaultChainId: 1337,\r\n// })\r\n\r\nexport const walletconnect = new WalletConnectConnector({\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n  infuraId: process.env.REACT_APP_INFURA_ID,\r\n  rpc: { 4: RPC_URLS[4] },\r\n  chainId: 4,\r\n  supportedChainIds: [4],\r\n})\r\n\r\n// export const walletlink = new WalletLinkConnector({\r\n//   url: RPC_URLS[1],\r\n//   appName: 'NFT-marketplace',\r\n// })\r\n\r\n// export const ledger = new LedgerConnector({\r\n//   chainId: 1,\r\n//   url: RPC_URLS[1],\r\n//   pollingInterval: POLLING_INTERVAL,\r\n// })\r\n\r\n// export const trezor = new TrezorConnector({\r\n//   chainId: 1,\r\n//   url: RPC_URLS[1],\r\n//   pollingInterval: POLLING_INTERVAL,\r\n//   manifestEmail: 'dummy@abc.xyz',\r\n//   manifestAppUrl: 'http://localhost:3000',\r\n// })\r\n\r\n// export const lattice = new LatticeConnector({\r\n//   chainId: 4,\r\n//   appName: 'NFT-marketplace',\r\n//   url: RPC_URLS[4],\r\n// })\r\n\r\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\r\n\r\n// export const authereum = new AuthereumConnector({ chainId: 42 })\r\n\r\n// export const fortmatic = new FortmaticConnector({\r\n//   apiKey: process.env.REACT_APP_FORTMATIC_API_KEY as string,\r\n//   chainId: 4,\r\n// })\r\n\r\n// export const magic = new MagicConnector({\r\n//   apiKey: process.env.REACT_APP_MAGIC_API_KEY as string,\r\n//   chainId: 4,\r\n//   email: 'hello@example.org',\r\n// })\r\n\r\n// export const portis = new PortisConnector({\r\n//   dAppId: process.env.REACT_APP_PORTIS_DAPP_ID as string,\r\n//   networks: [1, 100],\r\n// })\r\n\r\n// export const torus = new TorusConnector({ chainId: 1 })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Metamask]: injected,\r\n  // [ConnectorNames.Network]: network,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  // [ConnectorNames.WalletLink]: walletlink,\r\n  // [ConnectorNames.Ledger]: ledger,\r\n  // [ConnectorNames.Trezor]: trezor,\r\n  // [ConnectorNames.Lattice]: lattice,\r\n  // [ConnectorNames.Frame]: frame,\r\n  // [ConnectorNames.Authereum]: authereum,\r\n  // [ConnectorNames.Fortmatic]: fortmatic,\r\n  // [ConnectorNames.Magic]: magic,\r\n  // [ConnectorNames.Portis]: portis,\r\n  // [ConnectorNames.Torus]: torus,\r\n}\r\n","import { createContext, FC, Reducer, useContext, useReducer } from 'react'\r\nimport { TokenProps } from '../components/Token'\r\nimport { ContractProps, UserProps } from '../types'\r\n\r\nimport { reducer, Action } from './reducer'\r\n\r\nexport interface StateContext {\r\n  isAuthenticated: boolean\r\n  contract?: ContractProps\r\n  user?: UserProps\r\n  tokensOnSale?: TokenProps[]\r\n  ethPrice?: string\r\n  activatingConnector?: any\r\n  transaction?: any\r\n}\r\nexport interface Store {\r\n  state: StateContext\r\n  dispatch: React.Dispatch<Action>\r\n}\r\n\r\nconst defaultState: StateContext = {\r\n  isAuthenticated: false,\r\n}\r\n\r\nconst myContext = createContext<Store>({ state: defaultState, dispatch: () => {} })\r\n\r\nexport const useStateContext = () => useContext(myContext)\r\n\r\nexport const StateProvider: FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer<Reducer<StateContext, Action>>(reducer, defaultState)\r\n  return <myContext.Provider value={{ state, dispatch }} children={children} />\r\n}\r\n","export const fetcherETHUSD = (url: string) =>\r\n  fetch(url).then(r => r.json().then(r => r.result.ethusd))\r\n\r\nexport const fetcherMetadata = async (url: string) => {\r\n  try {\r\n    return await (await fetch(url)).json()\r\n  } catch (e) {\r\n    return { error: e.message }\r\n  }\r\n}\r\n","import { Contract, Event } from 'ethers'\r\nimport { TokenProps } from '../components/Token'\r\n\r\nconst listTokensFrom = (contract: Contract, address: string) =>\r\n  new Promise<TokenProps[]>(async (resolve, reject) => {\r\n    if (!contract || !address) reject('Contract or address not found')\r\n\r\n    try {\r\n      const ownedTokensEvents = contract.filters.Transfer(null, address)\r\n      const results: Event[] = await contract.queryFilter(ownedTokensEvents, 0, 'latest')\r\n\r\n      const ownedTokens: Map<string, TokenProps> = new Map()\r\n      await Promise.all(\r\n        results.map(async current => {\r\n          const ownerToken = await contract.ownerOf(current.args?.tokenId)\r\n\r\n          if (ownerToken === address) {\r\n            const { id, name, price } = await contract.tokenMeta(current.args?.tokenId)\r\n            const uri = await contract.tokenURI(current.args?.tokenId)\r\n\r\n            ownedTokens.set(uri, {\r\n              id,\r\n              name,\r\n              price,\r\n              uri,\r\n            })\r\n          }\r\n        })\r\n      )\r\n\r\n      resolve(Array.from(ownedTokens).map(([_, token]) => token))\r\n    } catch (e) {\r\n      reject(e)\r\n    }\r\n  })\r\n\r\nexport default listTokensFrom\r\n","const toShort = (value: string, factor: number = 5) => {\r\n  const slice = Math.round(value.length / factor)\r\n  return `${value.substr(0, slice)}...${value.substr(value.length - slice, value.length)}`\r\n}\r\n\r\nexport default toShort\r\n","const { REACT_APP_SERVICE_URL } = process.env\r\n\r\nexport const ETHSCAN_API = `${REACT_APP_SERVICE_URL}/ethusd`\r\nexport const METADATA_API = REACT_APP_SERVICE_URL || ''\r\n\r\nexport { default as listTokensFrom } from './listTokensFrom'\r\nexport { default as toShort } from './toShort'\r\n","import { FormEvent, MouseEvent, useState, useEffect } from 'react'\r\nimport { utils, BigNumber, constants } from 'ethers'\r\nimport {\r\n  Spinner,\r\n  Box,\r\n  Flex,\r\n  Card,\r\n  Button,\r\n  Image,\r\n  Input,\r\n  Text,\r\n  Heading,\r\n  Divider,\r\n  NavLink,\r\n} from 'theme-ui'\r\nimport useSWR from 'swr'\r\nimport { useStateContext } from '../../state'\r\nimport { fetcherMetadata } from '../../utils/fetchers'\r\nimport { METADATA_API, toShort } from '../../utils'\r\n\r\nexport type TokenProps = {\r\n  id: string\r\n  uri: string\r\n  price: BigNumber\r\n  name: string\r\n}\r\n\r\nexport type TokenCompProps = {\r\n  token: TokenProps\r\n  isOnSale?: boolean\r\n  onTransfer?({ id, address }: { id: string; address: string }): Promise<boolean>\r\n  onBuy?({ id, price }: { id: string; price: BigNumber }): void\r\n  onSale?({\r\n    id,\r\n    price,\r\n    onSale,\r\n  }: {\r\n    id: string\r\n    price: BigNumber\r\n    onSale?: boolean\r\n  }): Promise<boolean>\r\n}\r\n\r\nconst Token = ({ token, isOnSale, onTransfer, onBuy, onSale }: TokenCompProps) => {\r\n  const [transfer, setTransfer] = useState<boolean>(false)\r\n  const [onSaleActive, setOnSale] = useState<boolean>(false)\r\n  const [address, setAddress] = useState<string>('')\r\n  const [price, setPrice] = useState<string>('')\r\n  const [owner, setOwner] = useState<string>('')\r\n  const {\r\n    state: { user, ethPrice, contract },\r\n  } = useStateContext()\r\n\r\n  const onTransferClick = async (e: FormEvent | MouseEvent) => {\r\n    e.preventDefault()\r\n    try {\r\n      if (utils.isAddress(address) && onTransfer) {\r\n        const result = await onTransfer({ id: token.id, address })\r\n        if (result) {\r\n          setOnSale(false)\r\n        }\r\n      }\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n\r\n  const onBuyClick = (e: MouseEvent) => {\r\n    e.preventDefault()\r\n    onBuy && onBuy({ id: token.id, price: token.price })\r\n  }\r\n\r\n  const onSaleClick = async (e: MouseEvent) => {\r\n    e.preventDefault()\r\n    if (!onSale) return\r\n    try {\r\n      const result = await onSale({ id: token.id, price: utils.parseEther(price), onSale: true })\r\n      if (result) {\r\n        setOnSale(false)\r\n      }\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const loadOwner = async () => {\r\n      try {\r\n        const owner = await contract?.payload.ownerOf(token.id)\r\n        setOwner(owner)\r\n      } catch (e) {\r\n        // throw new Error(e)\r\n        console.error(e)\r\n      }\r\n    }\r\n\r\n    loadOwner()\r\n  }, [contract, token.id])\r\n\r\n  const { data } = useSWR(`${METADATA_API}/token/${token.id}`, fetcherMetadata)\r\n\r\n  const tokenPriceEth = new Intl.NumberFormat('us-GB', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  }).format(Number(utils.formatEther(token.price)) * Number(ethPrice))\r\n\r\n  if (!data)\r\n    return (\r\n      <Card variant=\"nft\">\r\n        <Spinner />\r\n      </Card>\r\n    )\r\n\r\n  if (!data.name) return null\r\n\r\n  return (\r\n    <Card variant=\"nft\">\r\n      <Image\r\n        sx={{ width: '100%', bg: 'white', borderBottom: '1px solid black' }}\r\n        src={data.image}\r\n      />\r\n      <Box p={3} pt={2}>\r\n        <Heading as=\"h2\">{data.name}</Heading>\r\n        <Divider variant=\"divider.nft\" />\r\n        <Box>\r\n          <Text sx={{ color: 'lightBlue', fontSize: 1, fontWeight: 'bold' }}>Price</Text>\r\n          <Heading as=\"h3\" sx={{ color: 'green', m: 0, fontWeight: 'bold' }}>\r\n            {constants.EtherSymbol} {Number(utils.formatEther(token.price)).toFixed(2)}{' '}\r\n            <Text sx={{ color: 'navy' }} as=\"span\" variant=\"text.body\">\r\n              ({tokenPriceEth})\r\n            </Text>\r\n          </Heading>\r\n          <Box mt={2}>\r\n            <Text as=\"p\" sx={{ color: 'lightBlue', fontSize: 1, fontWeight: 'bold' }}>\r\n              Owner\r\n            </Text>\r\n            <NavLink\r\n              target=\"_blank\"\r\n              href={`https://rinkeby.etherscan.io/address/${owner}`}\r\n              variant=\"owner\"\r\n              style={{\r\n                textOverflow: 'ellipsis',\r\n                width: '100%',\r\n                position: 'relative',\r\n                overflow: 'hidden',\r\n              }}\r\n            >\r\n              {toShort(owner)}\r\n            </NavLink>\r\n          </Box>\r\n          <Box mt={2}>\r\n            <NavLink\r\n              target=\"_blank\"\r\n              href={`https://testnets.opensea.io/assets/${contract?.details.address}/${token.id}`}\r\n              variant=\"openSea\"\r\n            >\r\n              View on Opensea.io\r\n            </NavLink>\r\n          </Box>\r\n        </Box>\r\n\r\n        {onTransfer && (\r\n          <Flex mt={3} sx={{ justifyContent: 'center' }}>\r\n            {transfer && (\r\n              <Box sx={{ width: '100%' }}>\r\n                <Flex\r\n                  onSubmit={onTransferClick}\r\n                  sx={{ width: '100%', flexDirection: 'column' }}\r\n                  as=\"form\"\r\n                >\r\n                  <Input\r\n                    onChange={e => setAddress(e.currentTarget.value)}\r\n                    placeholder=\"ETH Address 0x0...\"\r\n                  />\r\n                </Flex>\r\n                <Flex mt={2}>\r\n                  <Button sx={{ bg: 'green' }} onClick={onTransferClick} variant=\"quartiary\">\r\n                    Confirm\r\n                  </Button>\r\n                  <Button\r\n                    sx={{ bg: 'red' }}\r\n                    ml={2}\r\n                    onClick={() => setTransfer(false)}\r\n                    variant=\"quartiary\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Flex>\r\n              </Box>\r\n            )}\r\n            {onSaleActive && (\r\n              <Box sx={{ width: '100%' }}>\r\n                <Flex\r\n                  onSubmit={onTransferClick}\r\n                  sx={{ width: '100%', flexDirection: 'column' }}\r\n                  as=\"form\"\r\n                >\r\n                  <Input\r\n                    onChange={e => setPrice(e.currentTarget.value)}\r\n                    placeholder=\"Token Price in ETH\"\r\n                  />\r\n                </Flex>\r\n                <Flex mt={2}>\r\n                  <Button sx={{ bg: 'green' }} onClick={onSaleClick} variant=\"quartiary\">\r\n                    Confirm\r\n                  </Button>\r\n                  <Button\r\n                    sx={{ bg: 'red' }}\r\n                    ml={2}\r\n                    onClick={() => setOnSale(false)}\r\n                    variant=\"quartiary\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Flex>\r\n              </Box>\r\n            )}\r\n            {!transfer && !onSaleActive && (\r\n              <Flex sx={{ flexDirection: 'column', width: '100%', justifyContent: 'center' }}>\r\n                <Button onClick={() => setTransfer(!transfer)} variant=\"tertiary\">\r\n                  Transfer\r\n                </Button>\r\n                {isOnSale ? (\r\n                  <Button\r\n                    mt={2}\r\n                    onClick={() =>\r\n                      onSale &&\r\n                      onSale({\r\n                        id: token.id,\r\n                        price: token.price,\r\n                        onSale: false,\r\n                      })\r\n                    }\r\n                    variant=\"tertiary\"\r\n                  >\r\n                    Remove from Sale\r\n                  </Button>\r\n                ) : (\r\n                  <Button mt={2} onClick={() => setOnSale(!onSaleActive)} variant=\"tertiary\">\r\n                    Put Token for Sale\r\n                  </Button>\r\n                )}\r\n              </Flex>\r\n            )}\r\n          </Flex>\r\n        )}\r\n        {onBuy && (\r\n          <Flex mt={3} sx={{ justifyContent: 'center', width: '100%' }}>\r\n            <Button\r\n              sx={{\r\n                opacity: !!user?.ownedTokens.find(\r\n                  a => utils.formatUnits(a.id) === utils.formatUnits(token.id)\r\n                )\r\n                  ? 0.5\r\n                  : 1,\r\n                pointerEvents: !!user?.ownedTokens.find(\r\n                  a => utils.formatUnits(a.id) === utils.formatUnits(token.id)\r\n                )\r\n                  ? 'none'\r\n                  : 'visible',\r\n              }}\r\n              onClick={onBuyClick}\r\n              variant=\"quartiary\"\r\n            >\r\n              Buy Token\r\n            </Button>\r\n          </Flex>\r\n        )}\r\n      </Box>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Token\r\n","import { useHistory, useLocation } from 'react-router'\r\nimport { Box, NavLink, Flex, Heading, Image, Text } from 'theme-ui'\r\nimport { useStateContext } from '../../state'\r\nimport { UserMenu } from '..'\r\n\r\nexport type HeaderProps = {\r\n  //\r\n}\r\n\r\nconst Header = () => {\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  const {\r\n    state: { user, isAuthenticated },\r\n  } = useStateContext()\r\n\r\n  return (\r\n    <Box bg=\"black\">\r\n      <Flex sx={{ alignItems: 'center', p: 3 }} as=\"nav\">\r\n        <Image\r\n          onClick={() => {\r\n            history.push('/')\r\n          }}\r\n          sx={{ width: 50, cursor: 'pointer' }}\r\n          src=\"/static/logo.png\"\r\n        />\r\n        <Heading sx={{ ml: [1, 2], color: 'white' }} as=\"h4\">\r\n          ERC721 Marketplace{' '}\r\n          <Text sx={{ display: ['none', 'block'] }}>+ OpenSea.io on Rinkeby Network</Text>\r\n        </Heading>\r\n        <UserMenu />\r\n      </Flex>\r\n      {isAuthenticated && user && (\r\n        <Flex bg=\"midGray\" py={3} sx={{ justifyContent: 'center' }}>\r\n          <NavLink\r\n            sx={{\r\n              pointerEvents: location.pathname === '/' ? 'none' : 'visible',\r\n              color: location.pathname === '/' ? 'green' : 'white',\r\n            }}\r\n            onClick={() => history.push('/')}\r\n          >\r\n            Marketplace\r\n          </NavLink>\r\n          <Box sx={{ width: 50 }} />\r\n          <NavLink\r\n            sx={{\r\n              pointerEvents: location.pathname === '/profile' ? 'none' : 'visible',\r\n              color: location.pathname === '/profile' ? 'green' : 'white',\r\n            }}\r\n            onClick={() => history.push('/profile')}\r\n          >\r\n            Profile\r\n          </NavLink>\r\n        </Flex>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { utils } from 'ethers'\r\nimport { ActionProps } from '.'\r\nimport { ActionType } from '../state'\r\nimport listTokensFrom from '../utils/listTokensFrom'\r\n\r\ntype Props = ActionProps<{\r\n  userAccount: string\r\n  contract: any\r\n}>\r\n\r\nconst updateUser = async ({ contract, userAccount, library, dispatch }: Props) => {\r\n  try {\r\n    const balance = utils.formatEther(await library.getBalance(userAccount))\r\n    const ownedTokens = await listTokensFrom(contract, userAccount)\r\n\r\n    dispatch({\r\n      type: ActionType.UPDATE_USER,\r\n      payload: {\r\n        address: userAccount,\r\n        balance,\r\n        ownedTokens,\r\n      },\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n    throw new Error(e)\r\n  }\r\n}\r\n\r\nexport default updateUser\r\n","import { ActionProps } from '.'\r\nimport NFTT from '@fluuuid/nft-contracts/build/contracts/NFTT.json'\r\nimport { Contract } from 'ethers'\r\nimport { ActionType } from '../state'\r\n\r\ntype Props = ActionProps<{\r\n  chainId: number\r\n}>\r\n\r\nconst getContract = async ({ dispatch, library, chainId }: Props) => {\r\n  if (!library) throw new Error('No Web3 Found')\r\n\r\n  const networkid = (id: number) => {\r\n    switch (id) {\r\n      case 1337:\r\n        return 5777\r\n      default:\r\n        return id\r\n    }\r\n  }\r\n\r\n  try {\r\n    const deployedNetwork = NFTT.networks[String(networkid(chainId)) as keyof typeof NFTT.networks]\r\n\r\n    if (!deployedNetwork) {\r\n      throw new Error('The network you selected is no supported yet.')\r\n    }\r\n\r\n    const { address } = deployedNetwork\r\n    const contract = new Contract(address, NFTT.abi, library.getSigner())\r\n\r\n    const name = await contract.name()\r\n    const symbol = await contract.symbol()\r\n\r\n    dispatch({\r\n      type: ActionType.CONTRACT,\r\n      payload: {\r\n        payload: contract,\r\n        details: {\r\n          address,\r\n          name,\r\n          symbol,\r\n        },\r\n      },\r\n    })\r\n\r\n    return contract\r\n  } catch (e) {\r\n    console.log(e)\r\n    throw new Error(e)\r\n  }\r\n}\r\n\r\nexport default getContract\r\n","import { Contract } from 'ethers'\r\n\r\nimport { ActionProps } from '.'\r\nimport { TokenProps } from '../components/Token'\r\nimport { ActionType } from '../state'\r\n\r\ntype Props = ActionProps<{\r\n  contract: Contract\r\n}>\r\n\r\n// not used\r\n// too heavy to load\r\n// should've been in the contract 🤷‍♂️\r\n\r\n// const getAllTokens = async ({ contract }: Props) => {\r\n//   try {\r\n//     const logs = await contract.provider.getLogs({\r\n//       address: contract.address,\r\n//       fromBlock: 0,\r\n//       toBlock: 'latest',\r\n//     })\r\n\r\n//     const decoder = new utils.AbiCoder()\r\n\r\n//     console.log(contract)\r\n\r\n//     const tokens = await Promise.all<TokenProps>(\r\n//       await logs.reduce<any>(async (acc: TokenProps[], log: Log) => {\r\n//         const [from] = decoder.decode(['address'], log.topics[1])\r\n\r\n//         const list = await acc\r\n\r\n//         if (from === utils.getAddress('0x0000000000000000000000000000000000000000')) {\r\n//           const tokenId =\r\n//             log.topics && log.topics[3]\r\n//               ? utils.formatUnits(BigNumber.from(log.topics[3]), 'wei')\r\n//               : undefined\r\n\r\n//           const token = tokenId && (await contract.tokenMeta(tokenId))\r\n//           if (token) {\r\n//             list.push(token)\r\n//           }\r\n//         }\r\n//         return list\r\n//       }, Promise.resolve([]) as Promise<TokenProps[]>)\r\n//     )\r\n\r\n//     return tokens\r\n//   } catch (e) {\r\n//     console.log(e)\r\n//   }\r\n// }\r\n\r\nconst updateTokensOnSale = async ({ contract, dispatch }: Props) => {\r\n  try {\r\n    // const allTokens = (await getAllTokens({ contract, dispatch })) || []\r\n\r\n    // console.log(allTokens)\r\n\r\n    const tokensForSale = (await contract.getAllOnSale()).reduce((acc: TokenProps[], b: any) => {\r\n      if (b.uri !== '') {\r\n        acc.push({ id: b.id, price: b.price, name: b.name, uri: b.uri })\r\n      }\r\n\r\n      return acc\r\n    }, [] as TokenProps[])\r\n\r\n    dispatch({ type: ActionType.LOAD_TOKEN_SALE, payload: tokensForSale })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport default updateTokensOnSale\r\n","import { useWeb3React } from '@web3-react/core'\r\nimport { utils, BigNumber } from 'ethers'\r\nimport { Text, Box, Heading, Grid, Divider } from 'theme-ui'\r\nimport { Token } from '..'\r\nimport { updateTokensOnSale, updateUser } from '../../actions'\r\nimport { useStateContext } from '../../state'\r\n\r\nexport type ProfileProps = {}\r\n\r\nconst Profile = () => {\r\n  const { state, dispatch } = useStateContext()\r\n  const { contract, user, tokensOnSale } = state\r\n  const { library } = useWeb3React()\r\n\r\n  if (!user) return null\r\n\r\n  const { address, balance, ownedTokens } = user\r\n\r\n  const onConfirmTransfer = async (): Promise<boolean> => {\r\n    if (!user || !user.address || !library) return false\r\n    try {\r\n      await updateUser({\r\n        contract: contract?.payload,\r\n        userAccount: user.address,\r\n        library,\r\n        dispatch,\r\n      })\r\n      return true\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  const onTransferToken = async ({\r\n    id,\r\n    address,\r\n  }: {\r\n    id: string\r\n    address: string\r\n  }): Promise<boolean> => {\r\n    if (!contract?.payload) return false\r\n\r\n    try {\r\n      const tx = await contract.payload['safeTransferFrom(address,address,uint256)'](\r\n        user.address,\r\n        address,\r\n        id,\r\n        {\r\n          from: user.address,\r\n        }\r\n      )\r\n      const receipt = await tx.wait()\r\n      if (receipt.confirmations >= 1) {\r\n        return onConfirmTransfer()\r\n      } else {\r\n        return false\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      return false\r\n    }\r\n  }\r\n\r\n  const onSaleToken = async ({\r\n    id,\r\n    price,\r\n    onSale = true,\r\n  }: {\r\n    id: string\r\n    price: BigNumber\r\n    onSale?: boolean\r\n  }): Promise<boolean> => {\r\n    if (!contract?.payload || !user?.address) return false\r\n    try {\r\n      await contract.payload.setTokenSale(id, onSale, price, { from: user.address })\r\n      await updateTokensOnSale({ dispatch, contract: contract?.payload })\r\n      return await onConfirmTransfer()\r\n    } catch (e) {\r\n      console.log(e)\r\n      return false\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Heading as=\"h1\">My Profile</Heading>\r\n      <Grid columns={['1fr', '1fr 1fr']} sx={{ overflow: 'hidden', gap: '0 20px' }}>\r\n        <Box>\r\n          <Heading as=\"h4\" sx={{ color: 'green' }}>\r\n            Address\r\n          </Heading>\r\n          <Text>{address}</Text>\r\n        </Box>\r\n        <Box>\r\n          <Heading as=\"h4\" sx={{ color: 'green' }}>\r\n            Balance\r\n          </Heading>\r\n          <Text>Ξ {balance}</Text>\r\n        </Box>\r\n      </Grid>\r\n      <Divider variant=\"divider.nft\" sx={{ my: 7 }} />\r\n      <Box my={5}>\r\n        {ownedTokens && ownedTokens.length > 0 ? (\r\n          <Box>\r\n            <Heading as=\"h2\">\r\n              My items{' '}\r\n              <Text variant=\"text.body\" as=\"span\">\r\n                ({ownedTokens.length} item)\r\n              </Text>\r\n            </Heading>\r\n            <Grid gap={4} columns={['1fr 1fr', '1fr 1fr 1fr']}>\r\n              {ownedTokens.map((t, index) => (\r\n                <Token\r\n                  isOnSale={\r\n                    !!tokensOnSale?.find(a => utils.formatUnits(a.id) === utils.formatUnits(t.id))\r\n                  }\r\n                  onSale={onSaleToken}\r\n                  onTransfer={onTransferToken}\r\n                  token={t}\r\n                  key={index}\r\n                />\r\n              ))}\r\n            </Grid>\r\n          </Box>\r\n        ) : (\r\n          ownedTokens && (\r\n            <Box>\r\n              <Heading as=\"h2\">You don't own any NFT tokens</Heading>\r\n            </Box>\r\n          )\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import { BigNumber, utils } from 'ethers'\r\nimport { useCallback, useEffect, useState } from 'react'\r\nimport { Box, Button, Flex, Grid, Heading } from 'theme-ui'\r\nimport { updateTokensOnSale } from '../../actions'\r\nimport { ActionType, useStateContext } from '../../state'\r\nimport { Token } from '..'\r\n\r\nexport type GalleryProps = {}\r\ntype StateOrder = 'price' | 'alpha'\r\n\r\nconst Gallery = () => {\r\n  const { state, dispatch } = useStateContext()\r\n  const { contract, user, tokensOnSale } = state\r\n  const [order, setOrder] = useState<StateOrder>('alpha')\r\n\r\n  const onBuyToken = async ({ id, price }: { id: string; price: BigNumber }) => {\r\n    if (!contract?.payload) return\r\n\r\n    try {\r\n      const tx = await contract.payload.purchaseToken(id, { value: price })\r\n      dispatch({ type: ActionType.SET_TRANSACTION, payload: tx })\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  const loadTokensForSale = useCallback(async () => {\r\n    if (!dispatch || !contract?.payload) return\r\n\r\n    updateTokensOnSale({ dispatch, contract: contract.payload })\r\n  }, [dispatch, contract])\r\n\r\n  const onBuyTokenClick = ({ id, price }: { id: string; price: BigNumber }) => {\r\n    onBuyToken && onBuyToken({ id, price })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTokensForSale()\r\n  }, [loadTokensForSale, user?.ownedTokens])\r\n\r\n  return (\r\n    <Box>\r\n      <Heading as=\"h1\">Marketplace</Heading>\r\n      <Flex sx={{ alignItems: 'center' }} mb={3}>\r\n        <Heading as=\"h3\" sx={{ color: 'lightGray' }}>\r\n          Order:\r\n        </Heading>\r\n        <Flex ml={3}>\r\n          <Button\r\n            mr={2}\r\n            onClick={() => setOrder('alpha')}\r\n            variant=\"filter\"\r\n            disabled={order === 'alpha'}\r\n          >\r\n            Alphabetically\r\n          </Button>\r\n          <Button onClick={() => setOrder('price')} variant=\"filter\" disabled={order === 'price'}>\r\n            Price\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n      <Grid gap={4} columns={['1fr 1fr', '1fr 1fr', '1fr 1fr 1fr']}>\r\n        {tokensOnSale\r\n          ?.sort((a, b) =>\r\n            order === 'alpha'\r\n              ? BigNumber.from(a.id)\r\n                  .toString()\r\n                  .localeCompare(BigNumber.from(b.id).toString(), undefined, { numeric: true })\r\n              : Number(utils.formatEther(a.price.sub(b.price)))\r\n          )\r\n          .map((i, index) => (\r\n            <Token onBuy={onBuyTokenClick} token={i} key={index} />\r\n          ))}\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Gallery\r\n","import { Flex, Heading, Box } from 'theme-ui'\r\nimport { useHistory } from 'react-router'\r\nimport { EtherSymbol } from '@ethersproject/constants'\r\nimport { useStateContext } from '../../state'\r\nimport { Identicon } from '..'\r\nimport { toShort } from '../../utils'\r\n\r\nexport type UserMenuProps = {\r\n  //\r\n}\r\n\r\nconst UserMenu = () => {\r\n  const {\r\n    state: { user, isAuthenticated },\r\n  } = useStateContext()\r\n\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <Flex sx={{ ml: 'auto', justifySelf: 'flex-end' }}>\r\n      {isAuthenticated && user && (\r\n        <>\r\n          <Box sx={{ display: ['none', 'block'] }}>\r\n            <Heading sx={{ p: 0, color: 'white' }} as=\"h4\">\r\n              {toShort(user.address)}\r\n            </Heading>\r\n            <Heading sx={{ p: 0, mt: 1, textAlign: 'right', color: 'white' }} as=\"h5\">\r\n              {EtherSymbol}\r\n              {user.balance}\r\n            </Heading>\r\n          </Box>\r\n          <Box\r\n            onClick={() => {\r\n              history.push('/profile')\r\n            }}\r\n            sx={{\r\n              cursor: 'pointer',\r\n              ml: [0, 3],\r\n              height: 30,\r\n              width: 30,\r\n              borderRadius: '100%',\r\n            }}\r\n          >\r\n            <Identicon size={30} address={user.address} />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default UserMenu\r\n","import { ElementType } from 'react'\r\nimport { Redirect } from 'react-router'\r\nimport { Route } from 'react-router-dom'\r\nimport { useStateContext } from '../../state'\r\n\r\ntype PrivateRouteProps = {\r\n  component: ElementType\r\n  path: string\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, path }: PrivateRouteProps) => {\r\n  const {\r\n    state: { isAuthenticated },\r\n  } = useStateContext()\r\n\r\n  return (\r\n    <Route\r\n      path={path}\r\n      render={props => (isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />)}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import { useEffect, useRef } from 'react'\r\nimport { Flex } from 'theme-ui'\r\nimport jazzicon from 'jazzicon'\r\n\r\nexport type IdenticonProps = {\r\n  address: string\r\n  size?: number\r\n}\r\n\r\nconst Identicon = ({ address, size = 16 }: IdenticonProps) => {\r\n  const ref = useRef<HTMLDivElement>(null)\r\n  useEffect(() => {\r\n    if (!ref.current) return\r\n    try {\r\n      ref.current.innerHTML = ''\r\n      ref.current.appendChild(jazzicon(size, parseInt(address.slice(2, 10), 16)))\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }, [address, size])\r\n\r\n  return (\r\n    <Flex\r\n      ref={ref}\r\n      sx={{\r\n        justifyContent: 'center',\r\n        width: size + 2,\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Identicon\r\n","import { useWeb3React } from '@web3-react/core'\r\nimport { useEffect } from 'react'\r\nimport { Card, Flex, Spinner } from 'theme-ui'\r\nimport { updateUser } from '../../actions'\r\nimport { ActionType, useStateContext } from '../../state'\r\nimport { toShort } from '../../utils'\r\n\r\nconst TransactionProgress = () => {\r\n  const {\r\n    dispatch,\r\n    state: { transaction, user, contract },\r\n  } = useStateContext()\r\n\r\n  const { library } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const loadTransaction = async () => {\r\n      if (!user || !user.address || !transaction) return\r\n\r\n      const receipt = await transaction.wait()\r\n      if (receipt.confirmations >= 1) {\r\n        await updateUser({\r\n          contract: contract?.payload,\r\n          userAccount: user.address,\r\n          library,\r\n          dispatch,\r\n        })\r\n\r\n        dispatch({ type: ActionType.SET_TRANSACTION, payload: undefined })\r\n      } else {\r\n        throw new Error(receipt)\r\n      }\r\n    }\r\n\r\n    loadTransaction()\r\n  }, [dispatch, library, transaction, contract, user])\r\n\r\n  if (!transaction) return null\r\n\r\n  return (\r\n    <Card variant=\"transaction\">\r\n      <Flex sx={{ alignItems: 'center' }}>\r\n        <Spinner size={20} color=\"white\" sx={{ mr: 2 }} /> Transaction: {toShort(transaction.hash)}\r\n      </Flex>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TransactionProgress\r\n","import { Container, Flex, Button, Spinner, Image } from 'theme-ui'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\n\r\nimport { Gallery, TransactionProgress } from '../components'\r\nimport { ActionType, useStateContext } from '../state'\r\nimport { ConnectorNames, connectorsByName } from '../connectors'\r\n\r\nconst iconsMap = {\r\n  [ConnectorNames.Metamask]: 'https://docs.metamask.io/metamask-fox.svg',\r\n  [ConnectorNames.WalletConnect]: 'https://walletconnect.org/walletconnect-logo.svg',\r\n}\r\n\r\nconst App = () => {\r\n  const {\r\n    dispatch,\r\n    state: { user, activatingConnector },\r\n  } = useStateContext()\r\n  const { connector, activate, active } = useWeb3React()\r\n\r\n  return (\r\n    <Container>\r\n      {!user && (\r\n        <>\r\n          <Flex sx={{ justifyContent: 'center' }}>\r\n            {Object.keys(connectorsByName).map((name: string) => {\r\n              const currentConnector = connectorsByName[name as keyof typeof connectorsByName]\r\n              const activating = currentConnector === activatingConnector\r\n              const connected = currentConnector === connector\r\n\r\n              return (\r\n                <Button\r\n                  mt={2}\r\n                  mr={2}\r\n                  variant=\"connect\"\r\n                  sx={{\r\n                    borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\r\n                    position: 'relative',\r\n                    maxWidth: 250,\r\n                  }}\r\n                  key={name}\r\n                  onClick={() => {\r\n                    dispatch({ type: ActionType.SET_CONNECTOR, payload: currentConnector })\r\n                    activate(\r\n                      connectorsByName[name as keyof typeof connectorsByName] as AbstractConnector\r\n                    )\r\n                  }}\r\n                >\r\n                  {iconsMap[name as keyof typeof connectorsByName] && (\r\n                    <Image\r\n                      sx={{ width: 35, height: 35 }}\r\n                      mr={3}\r\n                      src={iconsMap[name as keyof typeof connectorsByName]}\r\n                    />\r\n                  )}\r\n\r\n                  {name}\r\n                  {activating && <Spinner size={20} color=\"white\" sx={{ ml: 3 }} />}\r\n                </Button>\r\n              )\r\n            })}\r\n          </Flex>\r\n        </>\r\n      )}\r\n\r\n      {user && active && (\r\n        <>\r\n          <Gallery />\r\n          <TransactionProgress />\r\n        </>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\n\r\nimport { App, Profile, Connect } from './'\r\nimport { Header, PrivateRoute } from '../components'\r\n\r\nfunction getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider)\r\n  library.pollingInterval = 12000\r\n  return library\r\n}\r\n\r\nconst Root = () => {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Header />\r\n      <Web3ReactProvider getLibrary={getLibrary}>\r\n        <Connect>\r\n          <Switch>\r\n            <PrivateRoute path=\"/profile\" component={Profile} />\r\n            <Route exact path=\"/\" component={App} />\r\n          </Switch>\r\n        </Connect>\r\n      </Web3ReactProvider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Root\r\n","import { Container } from 'theme-ui'\r\nimport { Profile } from '../components'\r\n\r\nconst ProfilePage = () => {\r\n  return (\r\n    <Container>\r\n      <Profile />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ProfilePage\r\n","import { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\r\n\r\nimport { FC, useEffect } from 'react'\r\nimport { Text, Container, Heading } from 'theme-ui'\r\nimport useSWR from 'swr'\r\nimport { getContract, updateUser } from '../actions'\r\nimport { useEagerConnect, useInactiveListener } from '../hooks/web3'\r\nimport { ActionType, useStateContext } from '../state'\r\nimport { ETHSCAN_API } from '../utils'\r\nimport { fetcherETHUSD } from '../utils/fetchers'\r\n\r\nfunction getErrorMessage(error: Error) {\r\n  console.log(error)\r\n\r\n  if (error instanceof NoEthereumProviderError) {\r\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\r\n  } else if (error instanceof UnsupportedChainIdError) {\r\n    return \"You're connected to an unsupported network.\"\r\n  } else if (\r\n    error instanceof UserRejectedRequestErrorInjected ||\r\n    error instanceof UserRejectedRequestErrorWalletConnect\r\n  ) {\r\n    return 'Please authorize this website to access your Ethereum account.'\r\n  } else {\r\n    console.error(error)\r\n    return 'An unknown error occurred. Check the console for more details.'\r\n  }\r\n}\r\n\r\nconst Connect: FC = ({ children }) => {\r\n  const {\r\n    dispatch,\r\n    state: { activatingConnector },\r\n  } = useStateContext()\r\n  const { library, chainId, account, error } = useWeb3React()\r\n\r\n  const { data: ethPrice } = useSWR(ETHSCAN_API, fetcherETHUSD)\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: ActionType.ETH_PRICE, payload: ethPrice })\r\n  }, [ethPrice, dispatch])\r\n\r\n  useEffect(() => {\r\n    if (!chainId || !account || !library) return\r\n\r\n    const update = async () => {\r\n      try {\r\n        const contract = await getContract({ dispatch, library, chainId })\r\n        await updateUser({ contract, userAccount: account, library, dispatch })\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n\r\n    update()\r\n  }, [chainId, account, library, dispatch])\r\n\r\n  const triedEager = useEagerConnect()\r\n  useInactiveListener(!triedEager || !!activatingConnector)\r\n\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Container>\r\n          <Heading as=\"h2\">❌ Something is not right</Heading>\r\n          <Text sx={{ mt: 3 }}>{getErrorMessage(error)}</Text>\r\n        </Container>\r\n      ) : (\r\n        children\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Connect\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport { injected } from '../connectors'\r\n// import { URI_AVAILABLE } from '@web3-react/walletconnect-connector'\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active, connector } = useWeb3React()\r\n\r\n  const [tried, setTried] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // console.log(connector)\r\n\r\n    // if (connector === walletconnect) {\r\n    //   walletconnect.on(URI_AVAILABLE, uri => {\r\n    //     console.log(uri)\r\n    //   })\r\n    // }\r\n\r\n    if (connector === injected) {\r\n      injected.isAuthorized().then((isAuthorized: boolean) => {\r\n        if (isAuthorized) {\r\n          activate(injected, undefined, true).catch(() => {\r\n            setTried(true)\r\n          })\r\n        } else {\r\n          setTried(true)\r\n        }\r\n      })\r\n    }\r\n  }, [activate, connector])\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (!tried && active) {\r\n      setTried(true)\r\n    }\r\n  }, [tried, active])\r\n\r\n  return tried\r\n}\r\n\r\n// type OnChangeProps = {\r\n//   account?: string\r\n//   chainId?: string | number\r\n// }\r\n\r\nexport function useInactiveListener(suppress: boolean = false) {\r\n  const { active, error } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window as any\r\n\r\n    if (ethereum) ethereum.autoRefreshOnNetworkChange = true\r\n\r\n    // if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n    //   const handleConnect = () => {\r\n    //     console.log(\"!!!!! Handling 'connect' event\")\r\n    //     activate(injected)\r\n    //   }\r\n    //   const handleChainChanged = (chainId: string | number) => {\r\n    //     console.log(\"11111 Handling 'chainChanged' event with payload\", chainId)\r\n    //     activate(injected)\r\n    //   }\r\n    //   const handleAccountsChanged = (accounts: string[]) => {\r\n    //     console.log(\"11111 Handling 'accountsChanged' event with payload\", accounts)\r\n    //     if (accounts.length > 0) {\r\n    //       activate(injected)\r\n    //     }\r\n    //   }\r\n    //   const handleNetworkChanged = (networkId: string | number) => {\r\n    //     console.log(\"11111 Handling 'networkChanged' event with payload\", networkId)\r\n    //     activate(injected)\r\n    //   }\r\n\r\n    //   ethereum.on('connect', handleConnect)\r\n    //   ethereum.on('chainChanged', handleChainChanged)\r\n    //   ethereum.on('accountsChanged', handleAccountsChanged)\r\n    //   ethereum.on('networkChanged', handleNetworkChanged)\r\n\r\n    //   return () => {\r\n    //     if (ethereum.removeListener) {\r\n    //       ethereum.removeListener('connect', handleConnect)\r\n    //       ethereum.removeListener('chainChanged', handleChainChanged)\r\n    //       ethereum.removeListener('accountsChanged', handleAccountsChanged)\r\n    //       ethereum.removeListener('networkChanged', handleNetworkChanged)\r\n    //     }\r\n    //   }\r\n    // }\r\n  }, [active, error, suppress])\r\n}\r\n","import { SxProp, Theme } from 'theme-ui'\r\n\r\nconst defaultButton = {\r\n  border: 0,\r\n  fontFamily: 'body',\r\n  fontWeight: 'normal',\r\n  lineHeight: 'body',\r\n  fontSize: [1, 2],\r\n  paddingX: 3,\r\n  paddingY: 2,\r\n  outline: 'none',\r\n  whiteSpace: 'nowrap',\r\n  cursor: 'pointer',\r\n  transition: 'all 0.1s ease-out',\r\n  '&:hover': {\r\n    opacity: 0.7,\r\n  },\r\n} as SxProp\r\n\r\nexport const Palette = {\r\n  text: '#FFF',\r\n  white: '#fff',\r\n  background: '#333',\r\n  primary: '#111',\r\n  secondary: '#333',\r\n  gray: '#F7F9FA',\r\n  lightGray: '#e0e0e0',\r\n  midGray: '#222',\r\n  lightBlue: '#EFF7FF',\r\n  navy: '#e0e0e0',\r\n  green: 'rgb(99, 255, 203)',\r\n  amber: '#D58408',\r\n  lightGreen: '#AEC',\r\n  red: '#999',\r\n  muted: '#999',\r\n  transparent: 'transparent',\r\n  white20: 'rgba(255, 255, 255, .2)',\r\n  black66: 'rgba(0, 0, 0, .66)',\r\n}\r\n\r\nexport type PaletteKeys = keyof typeof Palette\r\n\r\nexport const Sizes = {\r\n  header: 60,\r\n  container: 1020,\r\n  button: [100, 250],\r\n  logo: 60,\r\n  sidemenu: 240,\r\n  chart: 950,\r\n}\r\n\r\nexport default {\r\n  breakpoints: ['40em', '52em', '64em'],\r\n  space: [0, 4, 10, 16, 20, 30, 42, 56, 78, 125, 150],\r\n  fontSizes: [10, 12, 16, 26, 36, 50, 75],\r\n  fonts: {\r\n    body: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\r\n    heading: 'inherit',\r\n  },\r\n  layout: {\r\n    container: {\r\n      py: 4,\r\n      px: 3,\r\n      pb: 10,\r\n    },\r\n  },\r\n  sizes: {\r\n    ...Sizes,\r\n  },\r\n  cards: {\r\n    nft: {\r\n      bg: 'background',\r\n      border: '1px solid',\r\n      borderColor: 'muted',\r\n      textAlign: 'left',\r\n    },\r\n    transaction: {\r\n      bg: 'amber',\r\n      position: 'fixed',\r\n      top: 100,\r\n      right: 20,\r\n      p: 4,\r\n      borderRadius: 10,\r\n    },\r\n  },\r\n  links: {\r\n    nav: {\r\n      color: 'white',\r\n      cursor: 'pointer',\r\n      transition: 'all .2s ease-out',\r\n      '&:hover': {\r\n        opacity: 0.5,\r\n        color: 'white',\r\n      },\r\n    },\r\n    openSea: {\r\n      color: 'green',\r\n      fontSize: 1,\r\n      opacity: 0.5,\r\n      '&:after': {\r\n        content: `url(\"data:image/svg+xml,%3Csvg width='8' height='8' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.262 0l2.529 2.524L0 6.314 1.685 8l3.79-3.79L8 6.732V0z' fill='rgb(99, 255, 203)' fill-rule='nonzero' /%3E%3C/svg%3E\")`,\r\n        ml: 1,\r\n      },\r\n      transition: 'all .2s ease-out',\r\n      '&:hover': {\r\n        opacity: 1,\r\n        color: 'green',\r\n      },\r\n    },\r\n    owner: {\r\n      color: 'white',\r\n      fontSize: 1,\r\n      opacity: 0.5,\r\n      transition: 'all .2s ease-out',\r\n      '&:hover': {\r\n        opacity: 1,\r\n        color: 'white',\r\n      },\r\n      '&:after': {\r\n        content: `url(\"data:image/svg+xml,%3Csvg width='8' height='8' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.262 0l2.529 2.524L0 6.314 1.685 8l3.79-3.79L8 6.732V0z' fill='white' fill-rule='nonzero' /%3E%3C/svg%3E\")`,\r\n        ml: 1,\r\n      },\r\n    },\r\n  },\r\n  buttons: {\r\n    primary: {\r\n      ...defaultButton,\r\n      fontWeight: 'bold',\r\n      minWidth: 'button',\r\n      bg: 'primary',\r\n      color: 'white',\r\n      textAlign: 'center',\r\n      display: 'flex',\r\n      width: '100%',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n\r\n    secondary: {\r\n      cursor: 'pointer',\r\n      variant: 'buttons.primary',\r\n      bg: 'secondary',\r\n      fontWeight: 'body',\r\n    },\r\n    tertiary: {\r\n      variant: 'buttons.secondary',\r\n      color: 'white',\r\n      bg: 'primary',\r\n    },\r\n    quartiary: {\r\n      variant: 'buttons.tertiary',\r\n      bg: 'green',\r\n      color: 'black',\r\n      minWidth: 'auto',\r\n      py: 2,\r\n    },\r\n    filter: {\r\n      variant: 'buttons.tertiary',\r\n      bg: 'lightGreen',\r\n      color: 'black',\r\n      minWidth: 'auto',\r\n      py: 1,\r\n      fontSize: 1,\r\n      '&:disabled': {\r\n        pointerEvents: 'none',\r\n        opacity: 0.5,\r\n      },\r\n    },\r\n    connect: {\r\n      variant: 'buttons.tertiary',\r\n      py: 4,\r\n      px: 5,\r\n    },\r\n  },\r\n  fontWeights: {\r\n    heading: 300,\r\n    body: 400,\r\n    bold: 700,\r\n  },\r\n  lineHeights: {\r\n    body: 1.333333333,\r\n    heading: 1.066666667,\r\n    subheading: 2,\r\n  },\r\n  colors: {\r\n    ...Palette,\r\n  },\r\n  divider: {\r\n    nft: {\r\n      color: 'muted',\r\n      height: 1,\r\n      my: 2,\r\n    },\r\n  },\r\n  forms: {\r\n    input: {\r\n      paddingX: 2,\r\n      paddingY: 2,\r\n      borderRadius: '5px',\r\n      bg: 'white',\r\n      color: 'primary',\r\n    },\r\n  },\r\n  text: {\r\n    body: {\r\n      fontFamily: 'body',\r\n      fontWeight: 'body',\r\n      lineHeight: 'body',\r\n      fontSize: 1,\r\n    },\r\n    heading: {\r\n      py: 2,\r\n    },\r\n    bold: {\r\n      fontWeight: 'bold',\r\n    },\r\n    paragraph: {\r\n      fontFamily: 'body',\r\n      fontWeight: 'body',\r\n      lineHeight: 2,\r\n      fontSize: 2,\r\n      letterSpacing: 0.44,\r\n      color: 'white',\r\n    },\r\n    h1: {\r\n      fontFamily: 'heading',\r\n      lineHeight: 'heading',\r\n      fontWeight: 'heading',\r\n      fontSize: 6,\r\n      letterSpacing: -0.44,\r\n    },\r\n    h2: {\r\n      fontFamily: 'heading',\r\n      lineHeight: 'heading',\r\n      fontWeight: 'heading',\r\n      fontSize: 5,\r\n      letterSpacing: -0.44,\r\n    },\r\n    h3: {\r\n      fontFamily: 'heading',\r\n      lineHeight: 'subheading',\r\n      fontWeight: 'heading',\r\n      fontSize: 3,\r\n    },\r\n    h4: {\r\n      fontFamily: 'heading',\r\n      lineHeight: 'subheading',\r\n      fontWeight: 'bold',\r\n      fontSize: [1, 2],\r\n    },\r\n    h5: {\r\n      fontFamily: 'heading',\r\n      fontWeight: 'bold',\r\n      lineHeight: 1.6,\r\n      fontSize: 0,\r\n      letterSpacing: 1.5,\r\n    },\r\n  },\r\n  styles: {\r\n    root: {\r\n      fontFamily: 'body',\r\n      lineHeight: 'body',\r\n      fontWeight: 'body',\r\n    },\r\n    a: {\r\n      color: 'primary',\r\n      '&:hover': {\r\n        color: 'inherit',\r\n      },\r\n    },\r\n    hr: {\r\n      height: 1,\r\n      opacity: 0.5,\r\n      bg: 'black',\r\n      color: 'black',\r\n      my: 6,\r\n    },\r\n  },\r\n} as Theme\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { ThemeProvider } from 'theme-ui'\r\nimport * as Sentry from '@sentry/react'\r\nimport { Integrations } from '@sentry/tracing'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { Root } from './layout'\r\nimport { StateProvider } from './state/state'\r\nimport theme from './theme'\r\n\r\nSentry.init({\r\n  dsn: 'https://06951a956c7a4a6db2f776b1bc697efd@o72860.ingest.sentry.io/5842491',\r\n  integrations: [new Integrations.BrowserTracing()],\r\n\r\n  // Set tracesSampleRate to 1.0 to capture 100%\r\n  // of transactions for performance monitoring.\r\n  // We recommend adjusting this value in production\r\n  tracesSampleRate: 1.0,\r\n})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <StateProvider>\r\n        <Root />\r\n      </StateProvider>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}